[gcode_macro PRIME_NOZZLE]
gcode:
  SAVE_GCODE_STATE NAME=PRIME_state

  G90 ; use absolute coordinates
  G0 X5 Y5 Z0.2 F1500 ; move to start position
  G91 ; use relative coordinates

  G1 X+100 E10 ; prime the nozzle
  G0 Y0.3 ; move to the side a little
  G1 X-100 E10 ; prime the nozzle
  G0 Y0.3 ; move to the side a little
  G1 X+100 E10 ; prime the nozzle

  RESTORE_GCODE_STATE NAME=PRIME_state

[gcode_macro PRIME_RESUME]
gcode:
  SAVE_GCODE_STATE NAME=PRIME_RESUME_state
  {% set current_z = printer.toolhead.position.z|float %}
  PRIME_NOZZLE
  G90 ; use absolute coordinates
  G1 Z{current_z} F900
  RESTORE_GCODE_STATE NAME=PRIME_RESUME_state

  {% if printer.pause_resume.is_paused %}
    RESUME
  {% endif %}

[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED|default(60)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(205)|float %}
  CLEAR_PAUSE
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  
  M140 S{BED} ; set final bed temp
  M190 S{BED} ; wait for bed temp to stabilize
  COUNTDOWN S=300 ; stabilize bed temperature wobble
  M104 S150 ; set temporary nozzle temp to prevent oozing during homing
  M109 S150 ; wait for nozzle to reach temp
  
  G32
  M104 S{EXTRUDER} ; set final nozzle temp
  M109 S{EXTRUDER} ; wait for nozzle temp to stabilize
  
  PRIME_NOZZLE

[gcode_macro PRINT_END]
gcode:
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
  
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
  
  M400                           ; wait for buffer to clear
  _CLIENT_RETRACT
  TURN_OFF_HEATERS
  
  G90                                      ; absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 5} F3600  ; park nozzle at rear
  M107                                     ; turn off fan
  M84                                      ; turn off steppers
  
  BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro COUNTDOWN]
gcode:
  {% set S = params.S|default(60)|int %}
  {% for time in range(S|int, 0, -1) %}
    {% set minutes = (time / 60)|int %}
    {% set seconds = (time % 60)|int %}
    M117 Ready in: {'%dM%02dS'|format(minutes, seconds)}
    G4 P1000
  {% endfor %}
  M117

[gcode_macro FILAMENT_WRAPPER]
gcode:
  {% set FILAMENT_COMMAND = params.FILAMENT_COMMAND|default("") %}
  {% set EXTRUDER = params.EXTRUDER|default(215)|float %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set homed_axes = printer.toolhead.homed_axes %}
  {% set extruder_target = printer.extruder.target %}
  {% set is_paused = printer.pause_resume.is_paused %}
  
  SAVE_GCODE_STATE NAME=FILAMENT_WRAPPER_state
  {% if homed_axes != "xyz" %}
    G28
  {% endif %}
  M109 S{EXTRUDER} ; wait for nozzle temp to stabilize
  {% if is_paused != True %}
    PAUSE
  {% endif %}
  
  EXTRUDER_RELATIVE
  G92 E0
  { FILAMENT_COMMAND|default("") } ; run the actual command

  {% if is_paused != True %}
    CLEAR_PAUSE
  {% endif %}
  M109 S{extruder_target}
  {% if homed_axes != "xyz" %}
    M84
  {% endif %}
  RESTORE_GCODE_STATE NAME=FILAMENT_WRAPPER_state

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(215)|float %}
  FILAMENT_WRAPPER FILAMENT_COMMAND=LOAD_FILAMENT_INNER EXTRUDER={EXTRUDER}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(215)|float %}
  FILAMENT_WRAPPER FILAMENT_COMMAND=UNLOAD_FILAMENT_INNER EXTRUDER={EXTRUDER}

[gcode_macro LOAD_FILAMENT_INNER]
gcode:
  G1 E40 F300
  G92 E0
  G1 E40 F300
  G92 E0
  G1 E40 F300
  _CLIENT_RETRACT

[gcode_macro UNLOAD_FILAMENT_INNER]
gcode:
  _CLIENT_EXTRUDE
  G1 E-40 F960

[gcode_macro M125]
gcode:
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro DISABLE_STEPPERS]
gcode:
  M84

[gcode_macro EXTRUDER_RELATIVE]
gcode:
  M83

[gcode_macro EXTRUDER_ABSOLUTE]
gcode:
  M82

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}
